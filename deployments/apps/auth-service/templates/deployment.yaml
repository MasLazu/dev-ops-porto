apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth-service.fullname" . }}
  labels:
    {{- include "auth-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "auth-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "auth-service.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "auth-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - HTTP_PORT: {{ .Values.service.http.port }}
            - GRPC_PORT: {{ .Values.service.grpc.port }}
            - APP_ENV: {{ .Values.service.env }}
            - DB_HOST: {{ .Values.database.host }}
            - DB_PORT: {{ .Values.database.port }}
            - DB_DATABASE: {{ .Values.database.name }}
            - DB_USERNAME: {{ .Values.database.username }}
            - DB_PASSWORD: {{ .Values.database.password }}
            - DB_SCHEMA: {{ .Values.database.schema }}
            - OTLP_DOMAIN: {{ .Values.otlp.domain }}
            - JWT_SECRET: {{ .Values.jwt.secret }}
            - S3_ACCESS_KEY: {{ .Values.s3.accessKey }}
            - S3_SECRET_KEY: {{ .Values.s3.secretKey }}
            - S3_ENDPOINT: {{ .Values.s3.endpoint }}
            - S3_BUCKET_PROFILE_PICTURES: {{ .Values.s3.bucketProfilePictures }}
            - PUBLIC_STATIC_SERVICE_ENDPOINT: {{ .Values.publicStaticServiceEndpoint }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.http.port }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.service.grpc.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
